{"version":3,"sources":["components/Filter.js","components/AddPersonForm.js","components/Person.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","search","handleSearch","value","onChange","AddPersonForm","addPerson","newPerson","handleChange","onSubmit","name","id","number","type","Person","person","handleClick","onClick","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","messageClass","className","App","useState","persons","setPersons","setSearch","showAll","setShowAll","setNewPerson","notificationMessage","setNotificationMessage","notificationIsError","setNotificationIsError","useEffect","personServices","initialPersons","updatePerson","personToUpdate","find","changedPerson","returnedPerson","map","setTimeout","catch","error","filter","removePerson","e","personToDelete","target","window","confirm","personsToShow","toLowerCase","includes","preventDefault","some","concat","getAttribute","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed2b6cbf.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ search, handleSearch }) => (\n  <div>\n    search by name: <input value={search} onChange={handleSearch} />\n  </div>\n);\n\nexport default Filter;\n","import React from 'react';\n\nconst AddPersonForm = ({ addPerson, newPerson, handleChange }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <h2>add new contact</h2>\n      <div>\n        name: <input value={newPerson.name} onChange={handleChange} id=\"name\" />\n      </div>\n      <div>\n        number: <input value={newPerson.number} onChange={handleChange} id=\"number\" />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddPersonForm;\n","import React from 'react';\n\nconst Person = ({ person, handleClick }) => (\n  <p>\n    {person.name} {person.number}{' '}\n    <button type=\"button\" onClick={handleClick} id={person.id}>\n      delete\n    </button>\n  </p>\n);\n\nexport default Person;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (newObject, id) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => axios.delete(`${baseUrl}/${id}`);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, remove, update };\n","import React from 'react';\n\nconst Notification = ({ message, messageClass }) =>\n  message === null ? null : <div className={`${messageClass} message`}>{message}</div>;\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport AddPersonForm from './components/AddPersonForm';\nimport Person from './components/Person';\nimport personServices from './services/persons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [search, setSearch] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [newPerson, setNewPerson] = useState({ name: '', number: '' });\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [notificationIsError, setNotificationIsError] = useState(false);\n\n  useEffect(() => {\n    personServices.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addPerson = (e) => {\n    e.preventDefault();\n\n    if (newPerson.name && newPerson.number) {\n      if (persons.some((person) => person.name === newPerson.name)) {\n        const confirmToUpdate = window.confirm(\n          `${newPerson.name} is already in the phonebook. Do you want to replace their previous number with a new one?`\n        );\n\n        if (confirmToUpdate) {\n          updatePerson(newPerson);\n        }\n      } else {\n        personServices.create(newPerson).then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          setNewPerson({ name: '', number: '' });\n\n          setNotificationMessage(`Added ${returnedPerson.name}`);\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 3000);\n        });\n      }\n    } else {\n      setNotificationIsError(true);\n      setNotificationMessage('Please make sure to enter both a name and a number');\n\n      setTimeout(() => {\n        setNotificationMessage(null);\n        setNotificationIsError(false);\n      }, 3000);\n    }\n  };\n\n  const updatePerson = (newPerson) => {\n    const personToUpdate = persons.find((person) => person.name === newPerson.name);\n    const changedPerson = { ...personToUpdate, number: newPerson.number };\n    personServices\n      .update(changedPerson, changedPerson.id)\n      .then((returnedPerson) => {\n        setPersons(\n          persons.map((person) => (person.id !== changedPerson.id ? person : returnedPerson))\n        );\n        setNotificationMessage(`Updated ${returnedPerson.name}`);\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 3000);\n      })\n      .catch((error) => {\n        setPersons(persons.filter((person) => person.id !== changedPerson.id));\n\n        setNotificationIsError(true);\n        setNotificationMessage(`${changedPerson.name} was already deleted from the server`);\n\n        setTimeout(() => {\n          setNotificationMessage(null);\n          setNotificationIsError(false);\n        }, 3000);\n      });\n  };\n\n  const removePerson = (e) => {\n    const personToDelete = persons.find((person) => person.id === +e.target.id);\n    const confirmToDelete = window.confirm(`Delete ${personToDelete.name}?`);\n\n    if (confirmToDelete) {\n      personServices\n        .remove(personToDelete.id)\n        .then(() => {\n          setPersons(persons.filter((person) => person.id !== personToDelete.id));\n          setNotificationMessage(`Deleted ${personToDelete.name}`);\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 3000);\n        })\n        .catch((error) => {\n          setPersons(persons.filter((person) => person.id !== personToDelete.id));\n\n          setNotificationIsError(true);\n          setNotificationMessage(`${personToDelete.name} was already deleted from the server`);\n\n          setTimeout(() => {\n            setNotificationMessage(null);\n            setNotificationIsError(false);\n          }, 3000);\n        });\n    }\n  };\n\n  const handleChange = (e) => {\n    e.target.getAttribute('id') === 'name'\n      ? setNewPerson({ ...newPerson, name: e.target.value })\n      : setNewPerson({ ...newPerson, number: e.target.value });\n  };\n\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n    search ? setShowAll(false) : setShowAll(true);\n  };\n\n  const personsToShow = showAll\n    ? persons\n    : persons.filter((person) => person.name.toLowerCase().includes(search.toLowerCase()));\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification\n        message={notificationMessage}\n        messageClass={notificationIsError ? 'error' : 'notification'}\n      />\n      <Filter search={search} handleSearch={handleSearch} />\n      <AddPersonForm addPerson={addPerson} newPerson={newPerson} handleChange={handleChange} />\n      <h2>contacts</h2>\n      {personsToShow.map((person) => (\n        <Person person={person} key={person.id} handleClick={removePerson} />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}